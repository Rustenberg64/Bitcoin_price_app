# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: bitcoin_info.proto

require 'google/protobuf'


descriptor_data = "\n\x12\x62itcoin_info.proto\x12\x0b\x42itcoinInfo\"S\n\x0cPriceRequest\x12\r\n\x05place\x18\x01 \x01(\t\x12\x11\n\tdate_from\x18\x02 \x01(\t\x12\x0f\n\x07\x64\x61te_to\x18\x03 \x01(\t\x12\x10\n\x08interval\x18\x04 \x01(\x03\"E\n\x05Price\x12\n\n\x02id\x18\x01 \x01(\x03\x12\r\n\x05place\x18\x02 \x01(\t\x12\x14\n\x0crequested_at\x18\x03 \x01(\t\x12\x0b\n\x03ltp\x18\x04 \x01(\x03\",\n\x06Prices\x12\"\n\x06prices\x18\x01 \x03(\x0b\x32\x12.BitcoinInfo.Price2L\n\x0bSearchPrice\x12=\n\tGetPrices\x12\x19.BitcoinInfo.PriceRequest\x1a\x13.BitcoinInfo.Prices\"\x00\x62\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError => e
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module BitcoinInfo
  PriceRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("BitcoinInfo.PriceRequest").msgclass
  Price = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("BitcoinInfo.Price").msgclass
  Prices = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("BitcoinInfo.Prices").msgclass
end
